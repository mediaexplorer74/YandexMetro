<y:MetroPage
    x:Class="Yandex.Metro.Views.Favorites"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:y="clr-namespace:Yandex.Metro.Logic"
    xmlns:Control="clr-namespace:Y.UI.Common.Control;assembly=Y.UI.Common"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    SupportedOrientations="Portrait" Orientation="Portrait" 
    Margin="{StaticResource PageWithTrayMargin}"
    DataContext="{Binding Main, Source={StaticResource V}}"
    mc:Ignorable="d"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkitPrimitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls.Toolkit"
    d:DesignHeight="800" d:DesignWidth="480">


    <Grid x:Name="LayoutRoot" Background="Transparent">
        <Grid.Resources>
            <Style TargetType="toolkit:MultiselectItem" x:Key="CustomItem">
                <Style.Setters>
                    <Setter Property="Background" Value="{StaticResource AccentColorBrush}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="toolkit:MultiselectItem">
                                <Grid MinHeight="52">
                                    <Grid.Resources>
                                        <ExponentialEase EasingMode="EaseIn" Exponent="8" x:Key="ExponentialEaseIn"/>
                                        <QuadraticEase EasingMode="EaseOut" x:Key="QuadraticEaseOut"/>
                                    </Grid.Resources>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="SelectionEnabledStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition x:Name="ClosedToExposed" 
                                                          From="Closed" To="Exposed"
                                                          GeneratedDuration="0:0:0.30">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                               Storyboard.TargetName="OutterHintPanel">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualTransition>
                                                <VisualTransition x:Name="ExposedToClosed" 
                                                          From="Exposed" To="Closed"
                                                          GeneratedDuration="0:0:0.30">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                               Storyboard.TargetName="OutterHintPanel">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualTransition>
                                                <VisualTransition x:Name="ExposedToOpened"
                                                          From="Exposed" To="Opened"
                                                          GeneratedDuration="0:0:0.30">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                               Storyboard.TargetName="SelectBox">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                               Storyboard.TargetName="Presenter">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                               Storyboard.TargetName="OutterHintPanel">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                               Storyboard.TargetName="SelectBox">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                               Storyboard.TargetName="OutterHintPanel">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                               Storyboard.TargetName="InnerHintPanel">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualTransition>
                                                <VisualTransition x:Name="ClosedToOpened"
                                                          From="Closed" To="Opened"
                                                          GeneratedDuration="0:0:0.15">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                               Storyboard.TargetName="SelectBox">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                               Storyboard.TargetName="Presenter">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                               Storyboard.TargetName="SelectBox">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                               Storyboard.TargetName="OutterHintPanel">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                               Storyboard.TargetName="InnerHintPanel">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualTransition>
                                                <VisualTransition x:Name="OpenedToClosed"
                                                          From="Opened" To="Closed"
                                                          GeneratedDuration="0:0:0.15">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                               Storyboard.TargetName="SelectBox">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                               Storyboard.TargetName="Presenter">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                               Storyboard.TargetName="SelectBox">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualTransition>
                                            </VisualStateGroup.Transitions>
                                            <VisualStateGroup.States>
                                                <VisualState x:Name="Closed"/>
                                                <VisualState x:Name="Exposed">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                 Storyboard.TargetName="OutterHintPanel"
                                                                 Duration="0" To="1.0"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Opened">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                 Storyboard.TargetName="SelectBox"
                                                                 Duration="0" To="0"/>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                 Storyboard.TargetName="Presenter"
                                                                 Duration="0" To="86"/>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                               Storyboard.TargetName="SelectBox">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                               Storyboard.TargetName="OutterCover">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                 Storyboard.TargetName="OutterHintPanel"
                                                                 Duration="0" To="0.0"/>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                               Storyboard.TargetName="OutterHintPanel">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                               Storyboard.TargetName="InnerHintPanel">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup.States>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="OutterCover"
                                  HorizontalAlignment="Left" Width="86" 
                                  Visibility="Collapsed" Background="Transparent"/>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0" HorizontalAlignment="Stretch" toolkitPrimitives:ClipToBounds.IsEnabled="True">
                                            <ContentPresenter x:Name="Presenter">
                                                <ContentPresenter.RenderTransform>
                                                    <CompositeTransform TranslateX="24"/>
                                                </ContentPresenter.RenderTransform>
                                            </ContentPresenter>
                                        </Grid>
                                        <Rectangle x:Name="InnerHintPanel" Grid.Column="0" Width="24"
                                           Height="{TemplateBinding HintPanelHeight}"
                                           HorizontalAlignment="Left"
                                           Fill="Transparent"
                                           StrokeThickness="0">
                                            <Rectangle.RenderTransform>
                                                <CompositeTransform TranslateX="24"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <ContentControl x:Name="InfoPresenter" Grid.Column="1" 
                                                VerticalAlignment="Top"
                                                Content="{TemplateBinding ContentInfo}"
                                                ContentTemplate="{TemplateBinding ContentInfoTemplate}"/>
                                    </Grid>
                                    <Rectangle x:Name="OutterHintPanel" Width="24"
                                       HorizontalAlignment="Left"
                                       Height="{TemplateBinding HintPanelHeight}"
                                       Fill="{TemplateBinding Background}"
                                       StrokeThickness="0" Opacity="0.0"/>
                                    <Canvas HorizontalAlignment="Left">
                                        <CheckBox x:Name="SelectBox" VerticalAlignment="Top" Margin="12,14,5,0" Visibility="Collapsed"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}">
                                            <CheckBox.RenderTransform>
                                                <CompositeTransform TranslateX="-58"/>
                                            </CheckBox.RenderTransform>
                                        </CheckBox>
                                    </Canvas>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Margin="12,17,0,28">
            <TextBlock Text="{Binding Localization.Resources.Application_Title, Source={StaticResource V}}"
                       Style="{StaticResource PhoneTextNormalStyle}"/>
            <TextBlock Text="{Binding Localization.Resources.Menu_Favorites, Source={StaticResource V}}"
                       Margin="9,-7,0,0" Style="{StaticResource PhoneTextTitle1Style}"/>
        </StackPanel>

        <toolkit:MultiselectList Grid.Row="1" Name="multiSelectList" ItemTemplate="{StaticResource Multi_ItemTemplate}"
                                 ItemContainerStyle="{StaticResource CustomItem}" ItemsSource="{Binding Favorites}"
                                 IsSelectionEnabled="{Binding FavoritesSelection, Mode=TwoWay}" Margin="0,-10,0,0"/>

        <Control:BindableApplicationBar x:Name="bar" />
    </Grid>



</y:MetroPage>
